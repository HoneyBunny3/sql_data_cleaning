/*
PL/SQL Script: audit_logging.sql
-------------------------------------------
Purpose:
This script logs changes made to the `contracts` table into an audit table for traceability and compliance.

Features:
1. Logs the action, table name, timestamp, and details of changes.
2. Includes error handling for robust execution.

Execution Notes:
- Ensure the `audit_log` table is created before executing this script.
*/

-- Create the audit log table (if not exists)
BEGIN
    EXECUTE IMMEDIATE '
        CREATE TABLE audit_log (
            log_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            action VARCHAR2(100),
            table_name VARCHAR2(100),
            changed_at TIMESTAMP DEFAULT SYSTIMESTAMP,
            details VARCHAR2(4000)
        )';
    DBMS_OUTPUT.PUT_LINE('Audit log table created successfully.');
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -955 THEN -- ORA-00955: name is already used by an existing object
            DBMS_OUTPUT.PUT_LINE('Audit log table already exists.');
        ELSE
            DBMS_OUTPUT.PUT_LINE('Error creating audit log table: ' || SQLERRM);
        END IF;
END;
/

-- Insert a sample log entry
BEGIN
    INSERT INTO audit_log (action, table_name, details)
    VALUES ('Cleaned Data', 'contracts', 'Removed duplicates and standardized fields.');
    DBMS_OUTPUT.PUT_LINE('Sample log entry inserted successfully.');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error inserting log entry: ' || SQLERRM);
END;
/

/*
Execution Instructions:
-------------------------------------------
1. Save this script as `audit_logging.sql`.
2. Open Oracle SQL Developer or another PL/SQL-compatible environment.
3. Enable `DBMS_OUTPUT` by running:
   SET SERVEROUTPUT ON;
4. Execute the script.
5. Verify the log entries in the `audit_log` table using:
   SELECT * FROM audit_log;
*/